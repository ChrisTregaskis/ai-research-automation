name: Daily AI Research Automation

on:
  schedule:
    # Monday - AI/ML Tools & LangChain (9 AM UTC = 10 AM BST)
    - cron: '0 9 * * 1'
    # Tuesday - React/Next.js & TypeScript 
    - cron: '0 9 * * 2'  
    # Wednesday - AWS & Serverless (SST)
    - cron: '0 9 * * 3'
    # Thursday - DevOps & CI/CD
    - cron: '0 9 * * 4'
    # Friday - VS Code & Productivity
    - cron: '0 9 * * 5'
  
  # Allow manual triggering for testing
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Run in test mode (sends to single recipient)'
        required: false
        type: boolean
        default: false

env:
  NODE_VERSION: '20'

jobs:
  research-automation:
    name: Conduct Daily Research
    runs-on: ubuntu-latest
    timeout-minutes: 10 # Prevent runaway processes
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Dependencies
        run: |
          npm ci --only=production
          npm run build
        
      - name: Validate Configuration
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST || 'smtp.gmail.com' }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT || '587' }}
          EMAIL_RECIPIENTS: ${{ secrets.EMAIL_RECIPIENTS }}
          NODE_ENV: 'production'
        run: |
          echo "Validating environment configuration..."
          node -e "
            import('./dist/index.js').then(m => {
              console.log('Configuration validation passed');
            }).catch(err => {
              console.error('Configuration validation failed:', err.message);
              process.exit(1);
            });
          "
        
      - name: Test Email Configuration (if manual trigger)
        if: github.event_name == 'workflow_dispatch'
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST || 'smtp.gmail.com' }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT || '587' }}
          EMAIL_RECIPIENTS: ${{ secrets.EMAIL_RECIPIENTS }}
          NODE_ENV: 'production'
        run: |
          echo "Testing email configuration..."
          npm start -- --test-email
          
      - name: Run Daily Research
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST || 'smtp.gmail.com' }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT || '587' }}
          EMAIL_RECIPIENTS: ${{ secrets.EMAIL_RECIPIENTS }}
          NODE_ENV: 'production'
        run: |
          echo "Starting daily research automation..."
          npm start
          
      - name: Generate Summary Report
        if: always()
        run: |
          echo "## Research Automation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ job.status }}" == "success" ]; then
            echo "**Research completed successfully**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- Daily research topic processed" >> $GITHUB_STEP_SUMMARY
            echo "- Email summary sent to recipients" >> $GITHUB_STEP_SUMMARY
            echo "- All systems operational" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Research failed**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Check the logs above for error details." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Common Issues:**" >> $GITHUB_STEP_SUMMARY
            echo "- API key validation failed" >> $GITHUB_STEP_SUMMARY
            echo "- Email authentication error" >> $GITHUB_STEP_SUMMARY
            echo "- Network connectivity issues" >> $GITHUB_STEP_SUMMARY
          fi

  notify-on-failure:
    name: Failure Notification
    runs-on: ubuntu-latest
    needs: research-automation
    if: failure()
    
    steps:
      - name: Send Failure Notification
        env:
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          EMAIL_RECIPIENTS: ${{ secrets.EMAIL_RECIPIENTS }}
        run: |
          # Simple failure notification using curl and Gmail API
          # You could also integrate with Slack, Discord, etc.
          echo "Research automation failed at $(date)"
          echo "Check GitHub Actions logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          # Optional: Send email notification about failure
          # This is a basic implementation - you might want to enhance this
          cat > failure_email.json << EOF
          {
            "to": ["$EMAIL_RECIPIENTS"],
            "subject": "AI Research Automation Failed",
            "body": "The daily research automation failed. Check the GitHub Actions logs for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }
          EOF